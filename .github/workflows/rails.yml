name: Rails CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        ruby: [ '2.6', '2.7' ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install SQLite (Ubuntu)
        if: runner.os == 'Linux'
        run: sudo apt install -yqq libsqlite3-dev
      - name: Install SQLite (OSX)
        if: runner.os == 'macOs'
        run: brew install sqlite3
      - name: Setup Ruby ${{ matrix.ruby }}
        uses: actions/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
      - name: Ruby gem cache
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Install gems
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 12.13.1
      - name: Find yarn cache location
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: JS package cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install packages
        run: |
          yarn install --pure-lockfile
      - name: Run tests
        run: |
          cp .env.example .env
          bundle exec rspec
        env:
          RAILS_ENV: test

  # build-windows:
  #   runs-on: windows-latest

  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Use Ruby ${{ matrix.ruby }}
  #       uses: actions/setup-ruby@v1
  #       with:
  #         ruby-version: 2.6
  #     - name: bundle install and tests
  #       run: |
  #         gem install bundler
  #         bundle install
  #         bundle exec rspec
  #       env:
  #         RAILS_ENV: test
